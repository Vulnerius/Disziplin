# iac/kubernetes/kustomization.yaml

# Auflistung aller Kubernetes-Ressourcen (Deployments, Services, Secrets, etc.),
# die von Kustomize verwaltet werden sollen.
# Diese Pfade sind relativ zum Ort dieser kustomization.yaml Datei.
resources:
  - postgres/secret.yaml
  - postgres/service.yaml
  - postgres/statefulset.yaml
  - backend/service.yaml
  - backend/deployment.yaml
  - frontend/service.yaml
  - frontend/deployment.yaml
  # Wenn du eine ingress.yaml hast, füge sie hier hinzu:
  # - ingress/ingress.yaml

# Optional: Gemeinsame Labels für alle Ressourcen in dieser Kustomization.
# Dies ist nützlich, um alle Ressourcen einer Anwendung leicht zu identifizieren
# oder zu filtern (z.B. mit kubectl get all -l app.kubernetes.io/part-of=your-app-name).
commonLabels:
  app.kubernetes.io/part-of: disziplin-app
  app.kubernetes.io/instance: dev-on-pi # Kann für Umgebungen variieren

# Optional: Gemeinsame Annotationen
# commonAnnotations:
#   managed-by: kustomize

# Optional: Um die Replikat-Anzahl zu überschreiben, ohne die Deployment-Datei zu ändern.
# Du hast 2 Replikate für Backend und 4 für Frontend in deinen Deployments.
# Dies wäre nützlich, wenn du z.B. nur 1 Replikat für eine bestimmte Umgebung willst.
# replicas:
#   - name: backend-app
#     count: 2
#   - name: frontend-app
#     count: 4

# Optional: Image-Overlays (sehr nützlich, um Images zu aktualisieren!)
# Wenn du die Image-Tags aktualisieren musst, kannst du dies hier tun,
# anstatt direkt die Deployment-Dateien zu ändern.
# Kubernetes wird dann ein Rolling Update auslösen.
images:
  - name: disziplin-backend
    newName: localhost:5000/disziplin-backend
    newTag: latest
  - name: disziplin-frontend
    newName: localhost:5000/disziplin-frontend
    newTag: latest